services:
  mysql:
    image: mysql:8.0 # Imagem do MySQL
    container_name: mysql-container # Nome do container no Docker
#    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root # Senha do root do MySQL
      MYSQL_DATABASE: produtodb # Nome do banco de dados
      MYSQL_USER: produto       # Usuário do MySQL
      MYSQL_PASSWORD: produto   # Senha do MySQL
    #volumes:
      # Substitua o caminho abaixo pelo caminho absoluto no seu Windows
      #- ./sql-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5306:3306" # Mapeia a porta local 5306 para a porta do container

  adminer:
    image: adminer:latest # Imagem do Adminer
    container_name: adminer-container # Nome do container no Docker
  #  restart: always
    ports:
      - "7080:8080" # Mapeia a porta local 7080 para a porta do container

  mongodb:
    image: mongo:latest # Imagem do MongoDB
    container_name: mongodb-produto # Nome do container no Docker
    restart: always # Reinicia o container automaticamente
    ports:
      - "27017:27017" # Mapeia a porta local 27017 para a porta do container
    environment:
      MONGO_INITDB_ROOT_USERNAME: produto # Usuário administrador do MongoDB
      MONGO_INITDB_ROOT_PASSWORD: produto # Senha do administrador
      MONGO_INITDB_DATABASE: produtodb   # Nome do banco de dados inicial
    volumes:
      - mongodb_data:/data/db # Persistência dos dados do MongoDB

volumes:
  mongodb_data: # Define o volume mongodb_data
    name: mongodb_data # Nome do volume
    driver: local # Armazena os dados localmente. O Docker criará o volume automaticamente